#!/usr/bin/env python
import os
import sys

env = SConscript("godot-cpp/SConstruct")

# For reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

env.Append(CPPDEFINES=["GDEXTENSION"])

# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CPPPATH=[
  "../../../../../../StreamPeerSerial/",
  "../../../../../../StreamPeerSerial/serial/include"
])
env.Append(CPPPATH=["src/"])
sources = Glob("src/*.cpp")
sources.append("../../../../../../StreamPeerSerial/stream_peer_serial.cpp")

# serial library
serial_dir = "../../../../../../StreamPeerSerial/serial/"
sources.append(serial_dir + "src/serial.cc")

if env["platform"] == "windows":
    sources.append(serial_dir + "src/impl/win.cc")
    sources.append(serial_dir + "src/impl/list_ports/list_ports_win.cc")
    if env.get("is_msvc", True):
        env.Append(LINKFLAGS=["setupapi.lib", "Advapi32.lib"])
    else:
        env.Append(LIBS=["setupapi", "Advapi32"])
elif env["platform"].startswith("linux"):
    sources.append(serial_dir + "src/impl/unix.cc")
    sources.append(serial_dir + "src/impl/list_ports/list_ports_linux.cc")
    env.Append(LIBS=["rt", "pthread"])
elif env["platform"] == "macos":
    sources.append(serial_dir + "src/impl/unix.cc")
    sources.append(serial_dir + "src/impl/list_ports/list_ports_osx.cc")

if env["platform"] == "macos":
    library = env.SharedLibrary(
        "addons/rsss/bin/libgdexample.{}.{}.framework/librsss.{}.{}".format(
            env["platform"], env["target"], env["platform"], env["target"]
        ),
        source=sources,
    )
else:
    library = env.SharedLibrary(
        "addons/rsss/bin/librsss{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
        source=sources,
    )

Default(library)
